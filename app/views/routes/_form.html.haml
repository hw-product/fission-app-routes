= bootstrap_form_tag form_opts.merge(:html => {:id => 'route-form'}) do |f|
  = f.text_field :name, :value => @route ? @route.name : nil, :disabled => !!@route, :autofocus => true
  = f.text_field :description, :value => @route ? @route.description : nil
  %div.panel.panel-default#route-builder
    %div.panel-heading
      Route
    %div.panel-body
      %div.col-md-3.pull-left.route-items
        %div.panel.panel-success
          %div.panel-heading
            Route Items
          %div.panel-body
            %ul.list-group.bg-success.services-connector.service.custom-service.service-group#route-items{:style => 'list-style-type: none; min-height: 20px'}
              - if @route && @route.route_list
                - @route.route_list.each do |item|
                  - if item.is_a?(Fission::Data::Models::Service)
                    %li.list-group-item.service{:item_type => 'service', :item_id => item.id, :style => 'background-color: #fcf8ec'}= item.name
                  - elsif item.is_a?(Fission::Data::Models::ServiceGroup)
                    %li.list-group-item.bg-info.service-group{:item_type => 'service-group', :item_id => item.id, :style => 'background-color: #d9edf7'}= item.name
                  - elsif item.is_a?(Fission::Data::Models::CustomService)
                    %li.list-group-item.bg-danger.custom-service{:item_type => 'custom-service', :item_id => item.id, :style => 'background-color: #f2dede'}= item.name
      %div.col-md-3.service-available-list
        %div.panel.panel-warning
          %div.panel-heading
            Available Services
          %div.panel-body
            %ul.list-group.bg-warning.services-connector.service#all-services{:style => 'list-style-type: none; min-height: 20px'}
              - @services.each do |service|
                %li.list-group-item.service{:item_type => 'service', :item_id => service.id, :style => 'background-color: #fcf8ec'}= service.name
      %div.col-md-3.service-group-available-list
        %div.panel.panel-info
          %div.panel-heading
            Available Service Groups
          %div.panel-body
            %ul.list-group.bg-info.services-connector.service-group#all-service-groups{:style => 'list-style-type: none; min-height: 20px'}
              - @service_groups.each do |service_group|
                %li.list-group-item.bg-info.service-group{:item_type => 'service-group', :item_id => service_group.id, :style => 'background-color: #d9edf7'}= service_group.name
      %div.col-md-3.custom-service-available-list
        %div.panel.panel-danger
          %div.panel-heading
            Custom Services
          %div.panel-body
            %ul.list-group.bg-danger.services-connector.custom-service#all-custom-services{:style => 'list-style-type: none; min-height: 20px'}
              - @custom_services.each do |custom_service|
                %li.list-group-item.bg-danger.custom-service{:item_type => 'custom-service', :item_id => custom_service.id, :style => 'background-color: #f2dede'}= custom_service.name
      %div.clearfix

  #route-configs-list
    - if @route && @route.route_configs
      - @route.route_configs.each do |r_config|
        = render :partial => 'route_config', :locals => {:config => r_config, :rules => @match_rules, :configs => @configs}
    = link_to 'Add Config', add_config_routes_path, :class => 'btn btn-primary pull-right', :role => 'button', :remote => true, :id => 'config-adder'

  %div.clearfix

  = f.submit 'Enable', :disable_with => 'Enabling...', :class => 'btn btn-success'

:javascript
  $(document).ready(
    function(){
      $("#route-items, #all-services, #all-service-groups, #all-custom-services").sortable({
        connectWith: ".services-connector",
        receive: function(event, ui){
          if(!ui.item.parent().is("." + ui.item.attr('class').split(' ').join(', .'))){
            ui.sender.sortable('cancel');
          }
        }
      }).disableSelection();
      $('#route-configs-list').sortable().disableSelection();
      $('#route-form').submit(function(event){
        $('#route-items li').each(function(idx){
          idx++;
          $('#route-form').append('<input type="hidden" name="' + $(this).attr('item_type') + '[' + idx + ']" value="' + $(this).attr('item_id') + '" />');
        });
        $('#route-form .route-config').each(
          function(idx, item){
            config_id = item.id;
            config_elm = $(item);
            config_name = 'configs[' + config_id + ']';
            $('#route-form').append('<input type="hidden" name="' + config_name + '[name]" value="' + $('#' + config_id + '-name').val() + '" />');
            $('#route-form').append('<input type="hidden" name="' + config_name + '[description]" value="' + $('#' + config_id + '-name').val() + '" />');
            config_elm.find('.config-pack li').each(
              function(c_idx, c_item){
                $('#route-form').append('<input type="hidden" name="' + config_name + '[config_id][]" value="' + $(c_item).attr('config_id') + '" />');
              }
            );
            config_elm.find('.config-rule').each(
              function(r_idx, r_item){
                $('#route-form').append('<input type="hidden" name="' + config_name + '[rule_id][' + r_idx + '][' + $(r_item).attr('rule_id') + ']" value="' + $(r_item).attr('rule_value') + '" />');
              }
            );
          }
        );
      });
    }
  );
