- suffix = SecureRandom.uuid if suffix.nil?
- config = nil unless defined?(config)
- configs = [] unless defined?(configs)

.panel.panel-default.route-config{:config_identifier => suffix, :id => suffix}
  .panel-heading
    = config ? "Configurator: #{config.name}" : 'New Configuration'
    .pull-right
      = link_to(yield(:edit_icon), "##{suffix}-body", 'aria-expanded' => false, 'data-toggle' => 'collapse', 'aria-controls' => "#{suffix}-body")
      - if config
        = link_to(yield(:delete_icon), '#', :class => 'window-rails', 'window-rails-ajax' => 'delete', 'window-rails-confirm' => "Delete #{config.name} configurator?", 'window-rails-title' => 'Remove Configurator', 'window-rails-url' => remove_config_routes_path(:ident => suffix))
      - else
        = link_to(yield(:delete_icon), remove_config_routes_path(:ident => suffix), :method => :delete, :remote => true)

  .panel-body.collapse{:id => "#{suffix}-body"}
    .form-group
      %label.control-label{:for => "#{suffix}-name"}
        Name
      %input.form-control{:type => 'text', :name => "#{suffix}-name", :value => config ? config.name : nil, :disabled => !!config, :id => "#{suffix}-name", :autofocus => 'autofocus'}
    .form-group
      %label.control-label{:for => "#{suffix}-description"}
        Description
      %input.form-control{:type => 'text', :name => "#{suffix}-description", :value => config ? config.description : nil, :id => "#{suffix}-description"}
    .col-md-6.pull-left
      .panel.panel-default
        .panel-heading
          Configuration Packs
        .panel-body
          .col-md-6.pull-left.config-pack
            .panel.panel-success
              .panel-heading
                Applied Packs
              .panel-body
                .list-group.bg-success{:id => "route-configs-#{suffix}", :style => 'list-style-type: none; min-height: 20px', :class => suffix}
                  - if config
                    - config.account_configs.each do |a_config|
                      %li.list-group-item{:config_id => a_config.id, :style => 'background-color: inherit'}= a_config.name
          .col-md-6.pull-left.config-items
            .panel.panel-danger
              .panel-heading
                Available Packs
              .panel-body
                %ul.list-group.bg-danger{:id => "available-configs-#{suffix}", :style => 'list-style-type: none; min-height: 20px', :class => suffix}
                  - (configs - (config ? config.account_configs : [])).each do |config|
                    %li.list-group-item{:config_id => config.id, :style => 'background-color: inherit'}= config.name
    .col-md-6
      .panel.panel-default{:id => SecureRandom.uuid}
        .panel-heading
          Configuration Apply Matchers
        .panel-body
          %table.table.table-striped{:id => "rules-#{suffix}"}
            - if config && config.payload_matchers
              - config.payload_matchers.each do |match|
                = render :partial => 'rule', :locals => {:rule => match.payload_match_rule, :value => match.value, :removal_link_method => :remove_config_rule_routes_path, :rule_type => 'config'}
          .dropdown.pull-right
            %button.btn.btn-primary{:id => 'drop', :type => 'button', 'data-toggle' => 'dropdown', 'aria-haspopup' => true, 'aria-expanded' => false}
              Add Match
              %span.caret
            %ul.dropdown-menu{:role => 'menu', 'aria-labelledby' => 'drop'}
              - rules.each do |rule|
                %li= link_to rule.name, add_config_rule_routes_path(:rule => rule.id, :identifier => suffix), :remote => true

    .clearfix
:javascript
  $(document).ready(
    function(){
      $("#route-configs-#{suffix}, #available-configs-#{suffix}").sortable({
        connectWith: ".#{suffix}"
      }).disableSelection();
      $('.route-config .panel-heading').hover(function(){ $(this).css('cursor', 'move'); }, function(){ $(this).css('cursor', 'auto'); });
      window_rails.init();
    }
  );
